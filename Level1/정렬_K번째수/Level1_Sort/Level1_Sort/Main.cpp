#include "Main.h"

/*
문제 설명
배열 array의 i번째 숫자부터 j번째 숫자까지 자르고 정렬했을 때, k번째에 있는 수를 구하려 합니다.

예를 들어 array가 [1, 5, 2, 6, 3, 7, 4], i = 2, j = 5, k = 3이라면

array의 2번째부터 5번째까지 자르면 [5, 2, 6, 3]입니다.
1에서 나온 배열을 정렬하면 [2, 3, 5, 6]입니다.
2에서 나온 배열의 3번째 숫자는 5입니다.
배열 array, [i, j, k]를 원소로 가진 2차원 배열 commands가 매개변수로 주어질 때, commands의 모든 원소에 대해 앞서 설명한 연산을 적용했을 때 나온 결과를 배열에 담아 return 하도록 solution 함수를 작성해주세요.

제한사항
array의 길이는 1 이상 100 이하입니다.
array의 각 원소는 1 이상 100 이하입니다.
commands의 길이는 1 이상 50 이하입니다.
commands의 각 원소는 길이가 3입니다.
입출력 예
array					commands							return
[1, 5, 2, 6, 3, 7, 4]	[[2, 5, 3], [4, 4, 1], [1, 7, 3]]	[5, 6, 3]

입출력 예 설명
[1, 5, 2, 6, 3, 7, 4]를 2번째부터 5번째까지 자른 후 정렬합니다. [2, 3, 5, 6]의 세 번째 숫자는 5입니다.
[1, 5, 2, 6, 3, 7, 4]를 4번째부터 4번째까지 자른 후 정렬합니다. [6]의 첫 번째 숫자는 6입니다.
[1, 5, 2, 6, 3, 7, 4]를 1번째부터 7번째까지 자릅니다. [1, 2, 3, 4, 5, 6, 7]의 세 번째 숫자는 3입니다.


*/
#include <string>
#include <vector>
#include <algorithm>

using namespace std;

vector<int> arr = { 1, 5, 2, 6, 3, 7, 4 };
vector<vector<int>> omm = { { 2, 5, 3 }, { 4, 4, 1 }, { 1, 7, 3 } };

vector<int> solution(vector<int> array, vector<vector<int>> commands)
{
	vector<int> answer;
	// commands 크기만큼 돌려준다.
	for (auto alp : commands)
	{
		vector<int> result;

		// 인덱스는 0 부터 이므로 시작시 -1 해줌.
		for (int i = alp.at(0)-1; i < alp.at(1); i++)
		{
			// commands 값을 잘라 받음.
			result.push_back(array[i]);
		}

		// 받음값 정렬.
		sort(result.begin(), result.end());

		// 최종값 저장.
		answer.push_back(result.at(alp.at(2) - 1));
	}

	return answer;
}

int main()
{

	solution(arr, omm);

	return 0;
}